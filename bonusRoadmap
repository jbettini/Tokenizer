    it("should fail to mint NFT without sufficient signatures", async () => {
        // Créez l'adresse du compte multisig
        const [multisigAccount, _] = PublicKey.findProgramAddressSync(
            [
                Buffer.from("Sigs-Account"),
                multisigKeys[0].publicKey.toBuffer(),
            ],
            program.programId,
        );

        try {
            // Essayez de créer un multisig avec des signataires insuffisants
            await program.rpc.newMultisig([], {
                accounts: {
                    multisigAccount: multisigAccount,
                    user: payer.publicKey,
                },
                signers: [payer]
            });
            throw new Error("This should fail but didn't.");
        } catch (error) {
            console.log("Failed as expected with insufficient signers:", error);
        }
    });

    it("should fail to mint NFT with an unauthorized signature", async () => {
        // Supposons que `multisigKeys[2]` n'est pas autorisé
        try {
            // Essayez d'effectuer une action avec une clé non autorisée
            await program.rpc.someMintFunction({
                accounts: {
                    multisigAccount: multisigAccount,
                    user: multisigKeys[2].publicKey,
                },
                signers: [multisigKeys[2]]
            });
            throw new Error("This should fail but didn't.");
        } catch (error) {
            console.log("Failed as expected with unauthorized signature:", error);
        }
    });

    it("should fail on multiple attempts with the same signature", async () => {
        // Assurez-vous que la même clé ne peut pas signer plusieurs fois
        try {
            // Répétez la signature pour tester
            await program.rpc.someMintFunction({
                accounts: {
                    multisigAccount: multisigAccount,
                    user: multisigKeys[0].publicKey,
                },
                signers: [multisigKeys[0], multisigKeys[0]] // Signature répétée
            });
            throw new Error("This should fail but didn't.");
        } catch (error) {
            console.log("Failed as expected with repeated signatures:", error);
        }
    });
});
